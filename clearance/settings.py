"""
Django settings for clearance project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d*i(4e&qwd1lp=csvg9f5l@uh(c*c!k5aq9k6o77)r^00pme(w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'clearance.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'clearance.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration
# For development, use the file backend to save emails to files
EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = os.path.join(BASE_DIR, 'sent_emails')  # Directory where emails will be saved

# For production, uncomment these lines and use SMTP
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587  # Using port 587 for TLS
# EMAIL_USE_TLS = True  # Enable TLS
# EMAIL_USE_SSL = False  # Disable SSL
# EMAIL_HOST_USER = 'digitrance01@gmail.com'  # Your email address
# EMAIL_HOST_PASSWORD = 'brfxwxpsbwolhvis'  # Your app password
# EMAIL_TIMEOUT = 30  # Timeout in seconds

# Use a default sender email for both backends
EMAIL_HOST_USER = 'digitrance01@gmail.com'  # Your email address
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER

# Additional Email Settings
EMAIL_SSL_CERTFILE = None
EMAIL_SSL_KEYFILE = None

# Connection retry settings
EMAIL_MAX_RETRIES = 3  # Number of retries for sending emails
EMAIL_RETRY_DELAY = 5  # Delay between retries in seconds

# SMTP Debug Settings (remove in production)
DEBUG_SMTP = True
if DEBUG_SMTP:
    import logging
    logging.getLogger('django.mail').setLevel(logging.DEBUG)
    logging.getLogger('django.mail.backends').setLevel(logging.DEBUG)

# Import local settings if they exist
try:
    import os
    local_settings_path = os.path.join(os.path.dirname(__file__), 'local_settings.py')
    if os.path.exists(local_settings_path):
        with open(local_settings_path) as f:
            exec(f.read())
        print("Local settings imported successfully.")
    else:
        print(f"Local settings file not found at {local_settings_path}")
except Exception as e:
    print(f"Error importing local settings: {e}")

import os

INSTALLED_APPS.append('core')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STUDENT_PROFILE_UPLOAD_PATH = 'student_profiles'

TEMPLATES[0]['DIRS'].append(os.path.join(BASE_DIR, 'templates'))

LOGIN_URL='login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = '/'  # Redirects to home page after logout
